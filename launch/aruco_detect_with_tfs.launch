<!-- Run the fiducial_localization -->
<launch>

  <!-- RVIZ -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find aruco_detect_with_tfs)/launch/fiducial_localization.rviz" />

  <arg name="video_stream_provider" default="1" /> 
  <!--<arg name="video_stream_provider" default="http://192.168.15.5:8080/video" /> -->
  <arg name="camera_info_url" default="file:///$(find video_stream_opencv)/config/camera_parameters.yaml" />

  <group ns="camera">
    <node pkg="video_stream_opencv" type="video_stream" name="video_stream_node" output="screen"> 
      <remap from="camera" to="image_raw" />
	  <param name="camera_name" type="string" value="camera" />
	  <param name="video_stream_provider" type="string" value="$(arg video_stream_provider)" />
	  <param name="fps" type="int" value="10" />
	  <param name="camera_info_url" type="string" value="$(arg camera_info_url)" />
      <param name="width" value="1024"/>
      <param name="height" value="576"/>
    </node>
  </group>

  <!-- namespace for camera input -->
  <arg name="camera" default="camera"/>
  <arg name="image" default="image_raw"/>
  <arg name="transport" default="compressed"/>
  <arg name="fiducial_len" default="0.075"/>
  <arg name="dictionary" default="16"/>
  <arg name="do_pose_estimation" default="true"/>

  <!--output="screen"-->
  <node pkg="aruco_detect_with_tfs" name="aruco_detect_with_tfs"
    type="aruco_detect_with_tfs" respawn="false">
    <param name="image_transport" value="$(arg transport)"/>
    <param name="publish_images" value="true" />
    <param name="fiducial_len" value="$(arg fiducial_len)"/>
    <param name="dictionary" value="$(arg dictionary)"/>
    <param name="do_pose_estimation" value="$(arg do_pose_estimation)"/>
    <remap from="/camera/compressed" 
        to="$(arg camera)/$(arg image)/$(arg transport)"/>
    <remap from="/camera_info" to="$(arg camera)/camera_info"/>
  </node>

  <node pkg="tf" type="static_transform_publisher" name="map_global_camera_link" args="0 0 0 0 0 0 1 map global_camera 100" />

  <node pkg="aruco_detect_with_tfs" name="fiducials_tf" type="fiducial_tf" respawn="false">
  </node>


</launch>
